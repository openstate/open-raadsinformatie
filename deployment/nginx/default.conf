### HTTP SECTION

## Default response if no domain is specified.
## In case of a HTTP request on port 80 return a 404.
## In case of a HTTPS request on port 443 return the URL without HTTPS.
## This does give a warning as the domain doesn't match the cert's
## domain, but it will redirect to the correct domain if the user
## confirms the securtiy exception. This block can be uncommented once a
## certificate is available on this server (see INSTALL_HTTPS.txt).
server {
    listen 80;
    return 404;
    #return 301 https://vng.nl/artikelen/vng-realisatie;
}
server {
    listen 443 ssl;
    http2 on;
    # Specify certificate info for a domain, it doesn't matter which domain
    ssl_certificate /etc/letsencrypt/live/api.openraadsinformatie.nl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.openraadsinformatie.nl/privkey.pem;
    return 301 http://$host$request_uri;
    #return 301 https://vng.nl/artikelen/vng-realisatie;
}

## Example of proxying incoming HTTP requests to a Docker container (we
## use the variable $upstream which is resolved via Docker's DNS
## 127.0.0.11 (see nginx.conf) every 30 seconds to avoid Nginx load
## balancer not starting when it can't find the Docker container):
## opencultuurdata.nl
## served by docker_c-wordpress-nginx_1
#server {
#    listen 80;
#    server_name
#        opencultuurdata.nl
#        www.opencultuurdata.nl;
#
#    location / {
#        set $upstream docker_c-wordpress-nginx_1;
#        proxy_pass http://$upstream;
#        # Preserve the host header (i.e., the domain name) otherwise
#        # WordPress MU doesn't know which site to serve
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
#}

## Example of a static page:
## openwob.nl
## served by static HTML
#server {
#    listen 80;
#    server_name
#        openwob.nl
#        www.openwob.nl;
#    root /usr/share/nginx/html/openwob;
#    index index.html;
#
#    # Deny acccess to any .git repo's and README's; expand this
#    # section if there are other files which should not be
#    # accessible
#    location ~ /.git/ {
#        deny all;
#    }
#    location ~ README.md {
#        deny all;
#    }
#
#    location / {
#        # First attempt to serve request as file, then
#        # as directory, then fall back to displaying a 404.
#        try_files $uri $uri/ =404;
#        # Uncomment to enable naxsi on this location
#        # include /etc/nginx/naxsi.rules
#    }
#}

## Example of a redirect:
## redirect
#server {
#    listen 80;
#    server_name
#        openzorgdata.nl
#        www.openzorgdata.nl;
#
#    location / {
#        return 301 https://openstate.eu/nl/open-zorg-data-2/;
#    }
#}


### HTTPS SECTION

# Force redirect from HTTP to HTTPS for the following domains (this section
# can be reused by unrelated domains)
server {
    listen 80;
    server_name
        api.openraadsinformatie.nl;

    return 301 https://$host$request_uri;
}

## Example of proxying incoming HTTPS requests to a Docker container (we
## use the variable $upstream which is resolved via Docker's DNS
## 127.0.0.11 (see nginx.conf) every 30 seconds to avoid Nginx load
## balancer not starting when it can't find the Docker container):
## accountabilityhack.nl
## served by docker_c-wordpress-nginx_1
#server {
#    listen 443 ssl;
#    http2 on;
#    server_name
#        accountabilityhack.nl
#        www.accountabilityhack.nl;
#    ssl_certificate /etc/letsencrypt/live/accountabilityhack.nl/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/accountabilityhack.nl/privkey.pem;
#    add_header Strict-Transport-Security max-age=63072000 always;
#
#    location / {
#        set $upstream docker_c-wordpress-nginx_1;
#        proxy_pass http://$upstream;
#        # Preserve the host header (i.e., the domain name) otherwise
#        # WordPress MU doesn't know which site to serve
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
#}

#server {
#    listen 443 ssl;
#    http2 on;
#    server_name
#        openraadsinformatie.nl
#        www.openraadsinformatie.nl
#        zoek.openraadsinformatie.nl;
#    ssl_certificate /etc/letsencrypt/live/openraadsinformatie.nl/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/openraadsinformatie.nl/privkey.pem;
#
#    location / {
#        proxy_pass https://bucolic-fenglisu-ed05e9.netlify.app; 
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
#
#    location ^~ /.well-known/acme-challenge/ {
#        root /usr/share/nginx/html/;
#    }
#}

server {
    listen 443 ssl;
    http2 on;
    server_name api.openraadsinformatie.nl;
    ssl_certificate /etc/letsencrypt/live/api.openraadsinformatie.nl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.openraadsinformatie.nl/privkey.pem;
    add_header Strict-Transport-Security max-age=63072000 always;

    location /v1/elastic/ {
        set $cors '*';

        #if ($http_origin ~ '^https?://(localhost|api\.openraadsinformatie\.nl|www\.openraadsinformatie\.nl)') {
        #    set $cors $http_origin;
        #}

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, OPTIONS, DELETE' always;
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Pragma,Sec*';
	        add_header 'Access-Control-Allow-Headers' '*';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
	        #add_header 'X-Test' 'Test';
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' $cors always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, OPTIONS, DELETE' always;
        #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Pragma,Sec*' always;
	    add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Deny Nodes Shutdown API
        if ($request_filename ~ "_shutdown") {
            return 403;
            break;
        }

        # Deny access to Cluster API
        if ($request_filename ~ "_cluster") {
            return 403;
            break;
        }

        # 14-11-2024: disallow POST except for _search and _msearch
        set $POST_REJECTER "";
        if ($request_method = 'POST') {
            set $POST_REJECTER "POST";
        }
        if ($request_filename !~ _m?search$) {
            set $POST_REJECTER "${POST_REJECTER}NOTALLOWED";
        }
        if ($POST_REJECTER = 'POSTNOTALLOWED') {
            return 403;
            break;
        }

        # 14-11-2024: disallow DELETE
        if ($request_method = 'DELETE') {
            return 403;
            break;
        }

        # 14-11-2024: disallow PUT
        if ($request_method = 'PUT') {
            return 403;
            break;
        }

        #limit_except GET POST HEAD OPTIONS {
        #    allow 192.168.1.0/32;
        #    deny  all;
        #}

        #if ($request_method !~ ^(GET|POST|HEAD|OPTIONS)$ ) {
        #    return 405;
        #    break;
        #}

	    rewrite ^/v1/elastic(/.*)$ $1 break;
        proxy_pass http://ori_elastic_1:9200;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html/;
    }
}
