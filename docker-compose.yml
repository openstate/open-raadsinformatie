version: "2.2"
services:
  backend:
    build:
      context: .
      dockerfile: ocd_backend/Dockerfile
      cache_from:
        - openstatefoundation/open-raadsinformatie-backend:build-tmp
    image: openstatefoundation/open-raadsinformatie-backend
    links:
      - redis:redis
      - elastic:elasticsearch
    volumes:
      - oridata:/opt/ori/data
    depends_on:
      neo4j:
        condition: service_started
      elastic:
        condition: service_healthy
    mem_limit: 3g
  redis:
    image: "redis:${REDIS_VERSION}"
    volumes:
     - redisdata:/data
    sysctls:
     - net.core.somaxconn=65535
    mem_limit: 4g
  elastic:
    image: elasticsearch:7.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 4g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: wget -q -O - http://127.0.0.1:9200/_cat/health
      interval: 15s
      timeout: 10s
      retries: 5
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      # Discovery
      - network.host=127.0.0.1
      - http.host=0.0.0.0
      - cluster.name=docker-cluster

      # Disable xpack features
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false

      # Enable CORS for all origins
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - http.cors.allow-headers=Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true

      # Other settings
      - node.max_local_storage_nodes=20
      - bootstrap.memory_lock=false
      - reindex.remote.whitelist=c-open-raadsinformatie:9200
  neo4j:
    image: "neo4j:${NEO4J_VERSION}"
    volumes:
      - neodata:/data
    environment:
      - "NEO4J_AUTH=neo4j/development"
      - "NEO4J_dbms_memory_heap_maxSize=1g"

volumes:
  esdata:
    driver: local
  redisdata:
    driver: local
  oridata:
    driver: local
  neodata:
    driver: local